{"version":3,"sources":["data.js","Detail.js","LoginForm.js","4.jpg","PoetList.js","Logintbygoogle.js","Mypage.js","bada.png","b.jpg","pen.png","1.jpg","favicon.png","2.jpg","3.jpg","App.js","reportWebVitals.js","index.js"],"names":["id","title","author","content","박스","styled","div","제목","h4","TabContent","props","useEffect","스위치변경","누른탭","Info","재고","Detail","history","useHistory","useParams","찾은상품","추천","find","상품","useState","누른탭변경","스위치","className","src","width","price","onClick","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","headers","withCredentials","Component","PoetList","style","textAlign","marginTop","시목록","map","데이터","i","margin","img4","paddingBottom","Button","수정id변경","push","arrayCopy","console","log","window","confirm","splice","시목록변경","alert","axios","get","then","result","data","catch","Logintbygoogle","state","res","googleresponse","Name","profileObj","name","email","token","googleId","Image","imageUrl","ProviderId","post","sessionStorage","setItem","JSON","stringify","responseGoogle","response","signup","backgroundColor","padding","paddingTop","clientId","buttonText","onSuccess","onFailure","Dashboard","data1","parse","getItem","this","setState","List","App","Data","추천변경","제목입력","제목입력변경","내용입력","내용입력변경","수정id","검색값변경","Navbar","expand","sticky","Brand","href","fontFamily","fontSize","logo","height","alt","Toggle","aria-controls","Collapse","fontWeight","color","to","Form","inline","FormControl","onChange","e","target","value","type","placeholder","NavDropdown","exact","path","Jumbotron","imgA","imgB","marginBottom","imgPen","img1","newArray","placeHolder","unshift","length","Mypage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","quan","store","createStore","액션","copy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0a319c1.chunk.js","sourcesContent":["\r\nexport default [\r\n    {\r\n        id : 0,\r\n        title : \"흔들리며 피는 꽃\",\r\n        author : \"도종환\",\r\n        content : \"흔들리지 않고 피는 꽃이 어디 있으랴<br>이 세상 그 어떤 아름다운 꽃들도\\n다 흔들리면서 피었나니\\n흔들리면서 줄기를 곧게 세웠나니\\n흔들리지 않고 가는 사람이 어디 있으랴\\n\\n젖지않고 피는 꽃이 어디 있으랴\\n이 세상 그 어떤 빛나는 꽃들도\\n다 젖으며 젖으며 피었나니\",\r\n      },\r\n    \r\n      {\r\n        id : 1,\r\n        title : \"풀꽃\",\r\n        author : \"나태주\",\r\n        content : \"자세히 보아야\\n예쁘다\\n\\n오래 보아야\\n사랑스럽다\\n\\n너도 그렇다.\",\r\n      },\r\n    \r\n      {\r\n        id : 2,\r\n        title : \"풀꽃\",\r\n        author : \"나태주\",\r\n        content : \"자세히 보아야\\n예쁘다\\n\\n오래 보아야\\n사랑스럽다\\n\\n너도 그렇다.\",\r\n      }\r\n    ]","import React, {useEffect, useState} from 'react';\r\nimport { useHistory ,useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport './Detail.css'\r\nimport { Nav } from 'react-bootstrap';\r\n\r\nimport { CSSTransition }from \"react-transition-group\";\r\n\r\nlet 박스 = styled.div`\r\n    padding : 20px;\r\n`;\r\nlet 제목 = styled.h4`\r\n    font-size : 25px;\r\n`;\r\n\r\nfunction Detail(props){\r\n  \r\n    let history =useHistory();\r\n    //  id라는 변수는 :id 자리에 있던 숫자를 의미\r\n    let { id } = useParams(); \r\n    let 찾은상품 = props.추천.find(function(상품){\r\n        return 상품.id == id\r\n    })\r\n\r\n    let [누른탭,누른탭변경]=useState(0);//지금 누른 번호\r\n    let [스위치,스위치변경]=useState(0);\r\n    \r\n\r\n\r\n    return(\r\n      <div className=\"container\">\r\n          <박스>\r\n            <제목 className=\"title\">Detail</제목>\r\n          </박스>\r\n          \r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n          </div>\r\n          <div className=\"col-md-6 mt-4\">\r\n            <h4 className=\"pt-5\">{찾은상품.title}</h4>\r\n            <p>{찾은상품.content}</p>\r\n            <p>{찾은상품.price}</p>\r\n\r\n            <Info 재고={props.재고}></Info>\r\n\r\n            <button className=\"btn btn-danger\">주문하기</button> \r\n            <button className=\"btn btn-danger\" onClick={()=>{\r\n                history.goBack();\r\n            }}>뒤로가기</button> \r\n          </div>\r\n        </div>\r\n\r\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-0\" onClick={()=>{스위치변경(false); 누른탭변경(0)}}>Active</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"link-1\" onClick={()=>{스위치변경(false); 누른탭변경(1)}}>Option 2</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n      <TabContent 누른탭={누른탭} 스위치변경={스위치변경}/>\r\n      </CSSTransition>\r\n\r\n      </div> \r\n    )                            \r\n  }\r\n\r\n  function TabContent(props){\r\n    // 등장하거나 업데이트 될때 스위치 true로 바꿔줌\r\n    useEffect(()=>{\r\n      props.스위치변경(true);\r\n    })\r\n    if(props.누른탭 === 0){\r\n      return <div>0번째 내용입니다.</div>\r\n    } else if(props.누른탭 ===1){\r\n      return <div>1번째 내용입니다.</div>\r\n    }else if(props.누른탭 ===2){\r\n      return <div>2번째 내용입니다.</div>\r\n    }\r\n  }\r\n\r\n  function Info(props){\r\n    return(\r\n      <p>재고 : {props.재고}</p>\r\n    )\r\n  }\r\n\r\n  export default Detail;","import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n// import $ from \"jquery\";\r\n// import {} from \"jquery.cookie\";\r\n// axios.defaults.withCredentials = true;\r\nconst headers = { withCredentials: true };\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    login_email: \"\"\r\n  };\r\n  join = () => {\r\n    const send_param = {\r\n      headers,\r\n      email: this.joinEmail.value,\r\n      name: this.joinName.value,\r\n      password: this.joinPw.value\r\n    };\r\n    // axios\r\n    // // 서버전달..\r\n    //   .post(\"http://localhost:8080/member/join\", send_param)\r\n    //   //정상 수행\r\n    //   .then(returnData => {\r\n    //     if (returnData.data.message) {\r\n    //       alert(returnData.data.message);\r\n    //     } else {\r\n    //       alert(\"회원가입 실패\");\r\n    //     }\r\n    //   })\r\n    //   //에러\r\n    //   .catch(err => {\r\n    //     console.log(err);\r\n    //   });\r\n  };\r\n\r\n\r\n  login = () => {\r\n    const send_param = {\r\n      headers,\r\n      email: this.loginEmail.value,\r\n      password: this.loginPw.value\r\n    };\r\n    axios\r\n    // 서버에 전달\r\n      .post(\"http://localhost:8080/member/login\", send_param)\r\n      //정상 수행\r\n    //   .then(returnData => {\r\n    //     if (returnData.data.message) {\r\n    //       $.cookie(\"login_email\", returnData.data.email);\r\n    //       this.setState({\r\n    //         login_email: returnData.data.name\r\n    //       });\r\n    //       alert(returnData.data.message);\r\n    //       window.location.reload();\r\n    //     } else {\r\n    //       alert(\"로그인 실패\");\r\n    //     }\r\n    //   })\r\n      //에러\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  render() {\r\n    const formStyle={\r\n      margin : 50\r\n    };\r\n    return (\r\n      <Form style={formStyle}>\r\n          {/* 회원가입 */}\r\n        <Form.Group controlId=\"joinForm\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            ref={ref => (this.joinEmail = ref)}\r\n            placeholder=\"이메일을 입력해주세요\"\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n          <Form.Label>이름</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            ref={ref => (this.joinName = ref)}\r\n            placeholder=\"이름을 입력해주세요\"\r\n          />\r\n          <Form.Label>비밀번호</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            ref={ref => (this.joinPw = ref)}\r\n            placeholder=\"비밀번호를 설정해주세요\"\r\n          />\r\n          <Button onClick={this.join} variant=\"primary\" type=\"button\">\r\n            회원가입\r\n          </Button>\r\n        </Form.Group>\r\n\r\n        {/* 로그인 */}\r\n        <Form.Group controlId=\"loginForm\">\r\n          <Form.Label>이메일 주소</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            ref={ref => (this.loginEmail = ref)}\r\n            placeholder=\"이메일을 입력해주세요\"\r\n          />\r\n          <Form.Label>비밀번호</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            ref={ref => (this.loginPw = ref)}\r\n            placeholder=\"비밀번호를 입력해주세요\"\r\n          />\r\n          <Button onClick={this.login} variant=\"primary\" type=\"button\">\r\n            로그인\r\n          </Button>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","export default __webpack_public_path__ + \"static/media/4.1ead2516.jpg\";","import React, {useEffect, useState} from 'react';\r\nimport { useHistory ,useParams } from 'react-router-dom';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Navbar,Nav, NavDropdown,Form,FormControl,Button,Jumbotron } from 'react-bootstrap';\r\nimport TextArea from 'antd/lib/input/TextArea';\r\n\r\nimport img4 from './4.jpg';\r\nimport './PoetList.css'\r\n// App.css에 쓴것도 되네\r\n\r\nfunction PoetList(props){\r\n  let history =useHistory();\r\n  let num;\r\n    return(\r\n      <div className=\"PoetList\">\r\n        <div className=\"container\">\r\n            <h4 style={{textAlign:'left', marginTop:'200px'}}>둘러보기</h4>\r\n            {/* 12컬럼으로 쪼개 */}\r\n            <div className=\"row\">\r\n            {\r\n                props.시목록.map(function(데이터,i){\r\n                    return(\r\n                      <div className=\"col-md-4\" style={{margin:'50px 0'}}>\r\n                      {/* 서버 연결\r\n                          <img style={{cursor:'pointer'}} src={\"https://.github.io/\"+(props.i + 1)+\".jpg\"} width=\"100%\" /> */}\r\n                          <img src={img4} width=\"100%\" />\r\n                          <div className=\"content\">\r\n                            <div className=\"content-inner\">\r\n                              <h4 style={{paddingBottom:'30px'}}>{props.시목록[i].title}</h4>\r\n                              <p style={{textAlign:'right', paddingBottom:'20px'}}>{props.시목록[i].author}</p>\r\n                              <p>{props.시목록[i].content}</p>\r\n                              <div className=\"수정삭제버튼\">\r\n                                {/* 수정 */}\r\n                                <Button variant=\"light\" onClick={()=>{\r\n                                  //수정할 데이터의 id값을 알고 저장해야해, state로 그 값 보내야..\r\n                                  //id값을 부모컴포넌트에 어떻게 전달하지\r\n                                  //useState이용\r\n                                  props.수정id변경(i);\r\n                                  history.push('/edit')\r\n                                }}>수정</Button>\r\n                                {/* 삭제 */}\r\n                                <Button variant=\"light\" onClick={()=>{\r\n                                  let arrayCopy = [...props.시목록]\r\n                                  {console.log(arrayCopy)}\r\n                                  if(window.confirm('정말 삭제하시겠습니까?')){\r\n                                  arrayCopy.splice(i,1)\r\n                                  props.시목록변경( arrayCopy )\r\n                                  alert('삭제되었습니다.')\r\n                                  }\r\n                                }}>삭제</Button>\r\n                              </div>\r\n                              </div>\r\n                              </div>\r\n                        </div>\r\n\r\n\r\n                )\r\n                 })\r\n            }\r\n            </div>\r\n            <Button variant=\"outline-secondary\" style={{margin:'10px'}} onClick={()=>{\r\n          // 서버에 get요청\r\n          axios.get('https://codingapple1.github.io/shop/data2.json')\r\n          .then((result)=>{\r\n            console.log(result.data)\r\n            console.log(props.시목록)\r\n            props.시목록변경([...props.시목록,...result.data])\r\n          })\r\n          .catch(()=>{\r\n            console.log('오류')\r\n          })\r\n        }}>더보기</Button>\r\n        </div>\r\n      \r\n    </div>\r\n    )\r\n}\r\nexport default PoetList;","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nimport axios from 'axios'\r\n\r\n// let loginBox = styled.h4`\r\n//   margin-top: 50px;\r\n//   background-color: #f6f5f1;\r\n//   padding: 30px;\r\n// `;\r\n\r\nexport class Logintbygoogle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n\r\n    };\r\n\r\n    // this.signup = this\r\n    //   .signup\r\n    //   .bind(this);\r\n  }\r\n  signup(res) {\r\n    const googleresponse = {\r\n      Name: res.profileObj.name,\r\n      email: res.profileObj.email,\r\n      token: res.googleId,\r\n      Image: res.profileObj.imageUrl,\r\n      ProviderId: 'Google'\r\n    };\r\n    // debugger;\r\n    axios.post('', googleresponse)\r\n      .then((result) => {\r\n        let responseJson = result;\r\n        sessionStorage.setItem(\"userData\", JSON.stringify(result));\r\n        this.props.history.push('/Dashboard')\r\n      });\r\n  };\r\n  render() {\r\n    const responseGoogle = (response) => {\r\n      console.log(response);\r\n      var res = response.profileObj;\r\n      console.log(res);\r\n      debugger;\r\n      this.signup(response);\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n            <h4 style={{ marginTop: '50px',\r\n              backgroundColor: '#f6f5f1',\r\n              padding: '30px'}}>로그인</h4>\r\n          <div className=\"row\">\r\n              <div className=\"col-sm-4\" style={{paddingTop : '50px', margin: 'auto'}}>\r\n                <GoogleLogin\r\n                  clientId=\"607844855850-f6ob1uhc34ttp1jveo1sbl679vae832l.apps.googleusercontent.com\"\r\n                  buttonText=\"구글로 로그인하기\"\r\n                  onSuccess={responseGoogle}\r\n                  onFailure={responseGoogle} ></GoogleLogin>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Logintbygoogle\r\n\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport class Dashboard extends Component {\r\n        constructor(props){\r\n               super(props);\r\n                this.state = {\r\n                name:'',\r\n               };\r\n\r\n               }\r\n  componentDidMount() {\r\n        const data = JSON.parse(sessionStorage.getItem('userData'));\r\n        let data1=data;\r\n        console.log(data1.data.Name);\r\n    \r\n         console.log(data1.Name);\r\n         this.setState({name: data1.data.Name})\r\n      }\r\n        render() {\r\n                return (\r\n                        <div className=\"container\">   \r\n                         <div className=\"row\">  \r\n                                  <div className=\"col-sm-12 btn btn-info\">  \r\n                                 Welcome to Dashboard\r\n                         </div>  \r\n                         </div>\r\n                         <div className=\"row\">\r\n                         <div className=\"col-sm-3\"> Welcome  :{this.state.name} </div>\r\n                         <div className=\"col-sm-9\"></div>\r\n                         {/* <div className=\"col-sm-4\"></div> */}\r\n                         </div>\r\n                        </div>\r\n                )\r\n        }\r\n}\r\nexport default Dashboard","export default __webpack_public_path__ + \"static/media/bada.85542694.png\";","export default __webpack_public_path__ + \"static/media/b.af36509c.jpg\";","export default __webpack_public_path__ + \"static/media/pen.e409e013.png\";","export default __webpack_public_path__ + \"static/media/1.6b8ef2d2.jpg\";","export default __webpack_public_path__ + \"static/media/favicon.fc4a97b8.png\";","export default __webpack_public_path__ + \"static/media/2.0373a2b2.jpg\";","export default __webpack_public_path__ + \"static/media/3.c77ac262.jpg\";","import React, {useEffect, useState} from 'react';\nimport { useHistory ,useParams } from 'react-router-dom';\nimport './App.css';\nimport { Navbar,Nav, NavDropdown,Form,FormControl,Button,Jumbotron } from 'react-bootstrap';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport axios from 'axios';\nimport { Avatar } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nimport Data from './data.js';\nimport Detail from './Detail.js';\nimport LoginForm from \"./LoginForm.js\";\nimport PoetList from \"./PoetList.js\"\nimport GoogleButton from './GoogleButton.js'\nimport Logintbygoogle from './Logintbygoogle.js'\nimport Mypage from './Mypage.js'\n\nimport imgA from './bada.png';\nimport imgB from './b.jpg';\nimport imgPen from './pen.png';\nimport img1 from './1.jpg';\nimport img2 from './2.jpg';\nimport img3 from './3.jpg';\nimport img4 from './4.jpg';\nimport logo from './favicon.png';\nimport TextArea from 'antd/lib/input/TextArea';\n\n\n\nfunction App() {\n  let history =useHistory();\n\n  // data컴포넌트 이용\n  let [추천,추천변경] = useState(Data);\n\n  let [시목록,시목록변경] =useState(Data);\n\n  let [제목입력,제목입력변경] = useState('');\n  let [내용입력,내용입력변경] = useState('');\n\n  let [수정id, 수정id변경] = useState(0);\n  let [검색값, 검색값변경] = useState('');\n  // let resultForm;\n    // function getResultForm() {\n    //   console.log($.cookie(\"login_email\"));\n    //   if ($.cookie(\"login_email\")) {\n    //     resultForm = <Route exact path=\"/\"></Route>;\n    //     return resultForm;\n    //   } else {\n    //     resultForm = <Route exact path=\"/\" component={LoginForm}></Route>;\n    //     return resultForm;\n    //   }\n    // }\n    // getResultForm();\n\n    // const{id,title,author, content} =시목록;//비구조화 할당을 통해 값추출...?\n\n    // const onChange=(e)=>{\n    //   const {value,name}=e.target;\n    //   시목록변경({\n    //     ...시목록,\n    //     [name]:value\n    //   })\n    // }\n\n    function 제목수정(e){\n      let newArray=[...시목록];\n      newArray[수정id].title = e.target.value\n      시목록변경(newArray);\n    }\n\n    function 내용수정(e){\n      let newArray=[...시목록];\n      newArray[수정id].content = e.target.value\n      시목록변경(newArray);\n    }\n\n    // //초기화 함수\n    // const onReset =()=>{\n    //   시목록변경({\n    //     title : '',\n    //     content :''\n    //   })\n    // }\n    \n    // const onReset (()=>{\n    //   제목입력변경('')\n    //   내용입력변경('')\n    // })\n\n\n  return (\n    <div className=\"App\">\n     <Navbar className=\"navbar\" expand=\"lg\" sticky=\"top\">\n      <Navbar.Brand href=\"/\" style={{fontFamily:'Satisfy', fontSize: '24px'}}>\n      <img\n        src={logo}\n        width=\"30\"\n        height=\"30\"\n        alt=\"poetree logo\"\n      />{' '}poetree</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"m-auto menu\" style={{fontSize: '20px', fontFamily:'Noto Sans KR', fontWeight: 'Light', color:'#3d3d3d'}} >\n        <Nav.Link > <Link to=\"/intro\">소개</Link></Nav.Link>\n        <Nav.Link > <Link to=\"/poets\">오늘의 작품</Link></Nav.Link>\n        <Nav.Link > <Link to=\"/list\">둘러보기</Link></Nav.Link>\n        {/* <Nav.Link > <Link to=\"/login\">로그인</Link></Nav.Link> */}\n      </Nav>\n      <Form inline>\n        <FormControl onChange={(e)=>{검색값변경(e.target.value)}}type=\"text\" placeholder=\"검색하기\" className=\"mr-sm-2\" />\n        \n        <Button onClick={()=>{\n        }}variant=\"outline-success\"><Link to=\"/search\">검색</Link></Button>\n      </Form>\n      <NavDropdown style={{fontSize:'20px'}} title=\"로그인\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item ><Link to=\"/login\">로그인</Link></NavDropdown.Item>\n          <NavDropdown.Item ><Link to=\"/mypage\">마이페이지</Link></NavDropdown.Item>\n          <NavDropdown.Item><Link to=\"/intro\">Something</Link></NavDropdown.Item>\n      </NavDropdown>\n    </Navbar.Collapse>\n  </Navbar>\n\n    <Switch>\n    {/* 메인페이지 */}\n    <Route exact path=\"/\">\n      <Jumbotron className=\"bg\">\n        <div className=\"bg-content\">\n        <img src={ imgA}  />\n        <div >\n        <h1>나만의 시가 펼쳐지는 공간, poetree</h1>\n        <p>\n          오늘의 사진을 보고 느낀 감정과 생각을 시로 기록해보세요.\n        </p>    \n        <Button variant=\"outline-secondary\" onClick={()=>{history.push('/write')}}>시 작성하기</Button>   \n        </div>\n        </div>\n      </Jumbotron>\n\n      <div className=\"container\">\n        <div className=\"row\" style={{marginTop:'150px'}}>  \n          <img className=\"col-md-7\" src={imgB}></img>\n          <div className=\"col-md-5\" style={{padding:'150px 0 0 50px', textAlign:'left'}}>\n            <h2 style={{marginBottom:'36px'}}>about</h2>\n            <p style={{fontFamily:'Nanum Myeongjo'}}>사진 속 오늘의 기분을 시로 작성해보세요.<br></br>\n              그리고 다시 꺼내 보세요. 서랍 속 간직한 글과 감성을.<br></br>\n              자신의 시집을 만들어 함께 공유하며 나눠보세요.</p>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"main-banner row\" >\n      <img style={{ width: '100px'} } src={imgPen}></img>\n      <p>더 간편한 이용을 위해 포에트리 앱을 이용해 보세요. <br></br>\n더 간편한 이용을 위해 포에트리 앱을 이용해 보세요. <br></br>\n더 간편한 이용을 위해 포에트리 앱을 이용해 보세요. </p>\n        <Button variant=\"outline-secondary\">바로가기</Button>\n        </div>\n\n      <div className=\"container\">\n        <div className=\"row\" style={{marginTop:'130px'}}>\n          <div className=\"col-md-7\"style={{marginTop:'100px' , fontFamily: 'Nanum Myeongjo'}}>\n            <h4 style={{marginBottom:'60px' }}>흔들리며 피는 꽃</h4>\n            <p style={{textAlign:'right' , padding:'20px 50px'}}>도종환</p>\n            <p>흔들리지 않고 피는 꽃이 어디 있으랴<br></br>\n              이 세상 그 어떤 아름다운 꽃들도<br></br>\n              다 흔들리면서 피었나니<br></br>\n              흔들리면서 줄기를 곧게 세웠나니<br></br>\n              흔들리지 않고 가는 사람이 어디 있으랴<br></br>\n              <br></br>\n              젖지않고 피는 꽃이 어디 있으랴<br></br>\n              이 세상 그 어떤 빛나는 꽃들도<br></br>\n              다 젖으며 젖으며 피었나니<br></br>\n              바람과 비에 젖으며 꽃잎 따뜻하게 피웠나니<br></br>\n              젖지 않고 가는 삶이 어디 있으랴</p>\n          </div>\n          <img className=\"col-md-4\" src={img1}></img>\n        </div>\n      </div>\n\n            {/* 시 리스트 레이아웃 */}\n        <div className=\"container\">\n        <h4 style={{textAlign:'left', marginTop:'200px'}}>추천作</h4>\n        {/* 12컬럼으로 쪼개 */}\n        <div className=\"row\">\n          {\n            추천.map(function(data,i){\n              return(\n                // props사용\n                <List 추천={추천[i]} i={i} key={i}></List>\n              )\n            })\n          }\n        </div>\n        \n        <Button variant=\"outline-secondary\" style={{margin:'10px'}} onClick={()=>{\n          // 서버에 get요청\n          axios.get('https://codingapple1.github.io/shop/data2.json')\n          .then((result)=>{\n            console.log(result.data)\n            추천변경([...추천,...result.data])\n          })\n          .catch(()=>{\n            console.log('오류')\n          })\n        }}>더보기</Button>\n      </div>\n\n  </Route>\n    \n  {/* 리스트페이지 */}\n  <Route path=\"/list\">\n    <PoetList 시목록={시목록} 시목록변경={시목록변경} 제목입력={제목입력} 내용입력={내용입력} 제목입력변경={제목입력변경}\n    내용입력변경={내용입력변경} 수정id변경={수정id변경}/>\n  </Route>\n\n\n  {/* 상세페이지 */}\n  <Route path=\"/detail\">\n    <Detail 시목록={시목록}/>\n  </Route>\n\n  {/* 검색페이지 */}\n  <Route path=\"/search\">\n  {/* //filter함수 이용. 특정 조건을 갖고 값을 필터링\n          //검색한 값(검색값)이 포함된 값을 필터링.. */}\n          {/* {시목록.filter(function(데이터){\n            return(\n              데이터.name.indexOf(검색값)>-1\n            )\n          })}\n \n          {시목록.map(function(data,i){\n            return(\n              // props사용\n              <List 추천={추천[i]} i={i}></List>\n            )\n          })} */}\n  </Route>\n\n    {/* 수정페이지 */}\n    <Route path=\"/edit\">\n    <h3 style={{margin:'50px auto'}}>수정</h3>\n    <div className=\"publish\">\n      <div>\n      <input type =\"hidden\" name=\"id\"  value={시목록[수정id].id}></input>\n      <input type=\"text\" name=\"title\"  value={시목록[수정id].title} placeholder=\"제목을 작성하세요\" \n      className=\"title-input\" onChange={제목수정}/>\n      {/* 직접 수정하면 안됨\n      input value값은 제목입력에 안들어간다.. 즉, 수정 안하면 널값이 저장 */}\n      <TextArea name=\"content\" value={시목록[수정id].content} placeholder=\"시를 작성하세요\" \n      className=\"content-input\" onChange={내용수정}/>\n      </div>\n      {/* 이미지는 서버로 연결해 줘야함 */}\n      <img src={img4}/>\n\n    </div>\n    <Button variant=\"outline-secondary\" onClick={ ()=>{ \n          // history.push('/list')\n          {alert('수정 완료되었습니다.')}\n          {history.push('/list')}\n          }}>수정</Button>\n          \n    </Route>\n\n\n\n\n  {/* 시작성페이지 */}\n  {/* post로 서버에 보내줘야하나.. */}\n    <Route path=\"/write\">\n      <h3 style={{margin:'50px auto'}}>시 작성하기</h3>\n      <div className=\"publish\">\n      <div className=\"write\">\n      <input placeHolder=\"제목을 작성하세요\" className=\"title-input\" \n      onChange={ (e)=>{ 제목입력변경(e.target.value) } } />\n      <TextArea placeHolder=\"시를 작성하세요\" className=\"content-input\" \n        onChange={ (e)=>{ 내용입력변경(e.target.value) } } />\n      </div>\n      {/* 메인페이지 이미지와 연결.. */}\n      <img src={imgA}/>\n    </div>\n        <Button variant=\"outline-secondary\" onClick={ ()=>{ \n          // 아무것도 입력 안되어 있을때 저장 안함\n          if(제목입력===''||내용입력===''){alert('빈칸이 있습니다. 다시 입력해주세요.')}\n          else{\n          // history.push('/list')\n          alert('저장 완료되었습니다.')\n          let arrayCopy = [...시목록];\n          {console.log(arrayCopy)}\n          //배열 앞에 추가\n          arrayCopy.unshift({ id : arrayCopy.length ,title:제목입력,author:'글쓴이',content:내용입력});\n          시목록변경( arrayCopy )\n          //제목, 내용입력 초기화\n          제목입력변경('')\n          내용입력변경('')\n          }\n        }}>저장</Button>\n    </Route> \n\n\n{/* 로그인페이지 */}\n     <Route path=\"/login\">\n     <Logintbygoogle></Logintbygoogle>\n    </Route> \n\n{/* 마이페이지 */}\n     <Route path=\"/Dashboard\">\n     <Mypage></Mypage>\n    </Route> \n\n\n    </Switch>\n\n    </div>\n  );\n}\n\n\n\n\nfunction List(props){\n  return(\n    <div className=\"col-md-4\" style={{margin:'50px 0'}}>\n      {/* 서버에서 데이터 받아와야 함\n          <img style={{cursor:'pointer'}} src={\"https://.github.io/\"+(props.i + 1)+\".jpg\"} width=\"100%\" /> */}\n          <img src={img4} width=\"100%\" />\n          <div className=\"content\">\n            <div className=\"content-inner\">\n              <h4 style={{paddingBottom:'30px'}}>{props.추천.title}</h4>\n              <p style={{textAlign:'right', paddingBottom:'20px'}}>{props.추천.author}</p>\n              <p>{props.추천.content}</p>\n              </div>\n              </div>\n        </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nimport {BrowserRouter} from 'react-router-dom';\n\n// redux 셋팅\nimport {Provider} from 'react-redux';\nimport { createStore } from 'redux';\n// state를 변수에 저장 //state초기값\n// let store=createStore(()=>{ return [{id:0,name:'이름',quan:2},{id:1,name:'이름',quan:1}]});//state초기값\n\nlet 초기값=[\n  {id:0,name:'이름',quan:2},\n  {id:1,name:'이름',quan:1}\n];\nfunction reducer(state=초기값, 액션){\n  if(액션.type==='수량증가'){\n    let copy=[...state];\n    copy[0].quan++;\n    return copy\n  }else{\n    return state\n  }\n}\nlet store= createStore(reducer);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    {/* Provider로 감싸진 애들은 모두 같은 state를 공유 */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}